<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />

{% assign selected_variant = product.selected_or_first_available_variant %}
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>


<div className="flex flex-col lg:flex-row justify-center items-center gap-10 p-[5rem] bg-[#fafafa] w-screen">
  <div class="grid grid-cols-1 md:grid-cols-2 gap-3 pt-14">
    <div class="flex flex-col justify-center items-center gap-12">
      <div>
        {% render "product-image" %}</div>
      {% render "accordion" %}</div>
    <div class="flex flex-col relative items-center lg:items-start lg:left-[50px] lg:w-[400px] gap-10">
      {% form 'product'
        , product
        , id: 'product-form'
        , novalidate: 'novalidate' %}
        <input
          type="hidden"
          name="id"
          value="{{ selected_variant.id  }}">

        {% for block in section.blocks %}
          <div class="w-[400px]">
            {% case block.type %}
              <div class="my-3">
                <p class="uppercase text-sm text-gray-500 tracking-widest">{{ product.vendor }}</p>
              </div>
            {% when "vendor" %}
            {% when "title" %}

              <div class="py-3">
                <p class="mx-auto lg:mx-0 text-xl tracking-wide uppercase">{{ product.title }}</p>
              </div>
            {% when "price" %}
              <div class="flex items-center justify-start gap-5 w-full border-b pb-5">{% render "product-price" %}</div>
            {% when "variant_selector" %}
              <div class="py-4">
                {% unless product.has_only_default_variant %}
                  <variant-selector data-url="{{ product.url }}" data-section="{{ section.id }}">
                    {% for option in product.options_with_values %}
                      <label
                        class="uppercase text-sm tracking-wide"
                        for="Option-{{ section.id }}-{{ forloop.index0 }}"
                        class="block">{{ option.name }}:</label>

                      <div class="my-2">
                        <ul class="flex flex-wrap items-center gap-3 pt-5">
                          {% for value in option.values %}
                            <li class="radio-toolbar">
                              <input
                                type="radio"
                                name="options[{{ option.name | escape }}]"
                                id="Option-{{ section.id }}-{{ forloop.parent.index0 }}-{{ forloop.index }}"
                                class="border py-3 px-3"
                                value="{{ value | escape }}"
                                {% if option.selected_value == value %}
                                checked
                                {% endif %}>
                              <label class="cursor-pointer" for="Option-{{ section.id }}-{{ forloop.parent.index0 }}-{{ forloop.index }}">
                                <span class="u-visually-hidden uppercase text-sm tracking-wider">{{ value }}</span>
                              </label>
                            </li>
                          {% endfor %}
                        </ul>
                      </div>

                      <script type="application/json">
                        {{ product.variants | json }}
                      </script>
                    {% endfor %}
                  </variant-selector>
                {% endunless %}
              </div>
            {% when "quantity" %}
              <div class="pb-3">{% render "product-quantity-selector" %}</div>


            {% when "checkout_button" %}
              <div class="pb-6">
                <button
                  type="submit"
                  name="add"
                  class="w-full px-6 py-2 bg-gray-900 uppercase tracking-widest text-white transition ease-out duration-500 hover:bg-gray-700 rounded-sm"
                  {% if selected_variant.available == false %}
                  disabled
                  {% endif %}>
                  {% if selected_variant.available == false %}
                    Sold out
                  {% else %}
                    Add to cart
                  {% endif %}
                </button>
              </div>
            {% when "description" %}
              <p>{{ product.description }}</p>


              {% else %}
            </div>
        {% endcase %}
      {% endfor %}

    {% endform %}
  </div>
</div></div><script>
  class VariantSelector extends HTMLElement {
    constructor() {
      super();
      this.addEventListener("change", this.onVariantChange);
    }

    onVariantChange() {
      this.getSelectedOptions();
      this.getSelectedVariant();

      if (this.currentVariant) {
        this.updateURL();
        this.updateFormID();
        this.updatePrice();
      }
    }

    getSelectedOptions() {
      this.options = Array.from(this.querySelectorAll('input[type="radio"]:checked'), (radio) => radio.value);
      console.log(this.options);
    }

    getVariantJSON() {
      this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
      return this.variantData;
    }

    getSelectedVariant() {
      this.currentVariant = this.getVariantJSON().find(
        (variant) => {
          const findings = !variant.options.map(
            (option, index) => {
              return this.options[index] === option;
            }
          ).includes(false);

          if (findings) return variant;
        }
      );

      console.log(this.currentVariant);
    }

    updateURL() {
      if (!this.currentVariant) return;
      window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`);
    }

    updateFormID() {
      const form_input = document.querySelector("#product-form").querySelector('input[name="id"]');
      form_input.value = this.currentVariant.id;
    }

    updatePrice() {
      fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`)
        .then((response) => response.text())
        .then((responseText) => {
          const id = `price-${this.dataset.section}`;
          const html = new DOMParser().parseFromString(responseText, 'text/html');

          const oldPrice = document.getElementById(id);
          const newPrice = html.getElementById(id);

          if (oldPrice && newPrice) oldPrice.innerHTML = newPrice.innerHTML;
        });
    }
  }

  customElements.define("variant-selector", VariantSelector);
</script>{% schema %}
{
  "name": "Product",
  "blocks": [
    {
      "type": "vendor",
      "name": "Vendor",
      "limit": 1
    },
    {
      "type": "title",
      "name": "Title",
      "limit": 1
    },
    {
      "type": "price",
      "name": "Price",
      "limit": 1
    },
    {
      "type": "variant_selector",
      "name": "Variant Selector",
      "limit": 1
    }, {
      "type": "quantity",
      "name": "Quantity",
      "limit": 1
    }, {
      "type": "checkout_button",
      "name": "Checkout Button",
      "limit": 1
    }, {
      "type": "description",
      "name": "Description",
      "limit": 1
    }, {
      "type": "metafield",
      "name": "Metafield"
    }
  ]
}{% endschema %}