<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />

{% assign selected_variant = product.selected_or_first_available_variant %}
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>


<div
  class="flex flex-col lg:flex-row justify-center items-center gap-10 p-[5rem] bg-[#fafafa]"
  x-data="{openCartDrawer: false}"
  style="background-color: {{ section.settings.product_background_color }};">
  <div class="flex flex-col gap-10">
    <div class="flex flex-col w-[400px]">
      <div>{% render "product-image" %}</div>

      <div class="mt-24 hidden lg:flex">{% render "accordion" %}</div>
      {% if section.blocks.type == "@app" %}
        {% render "judgeme_widgets" %}
      {% endif %}
    </div>
  </div>
  <div class="flex flex-col relative items-center lg:items-start lg:left-[50px] lg:w-[400px] gap-10">
    {% form 'product'
      , product
      , id: 'product-form'
      , novalidate: 'novalidate' %}
      <input
        type="hidden"
        name="id"
        value="{{ selected_variant.id  }}">

      {% for block in section.blocks %}
        <div class="w-[350px] lg:w-[400px]">
          {% case block.type %}
          {% when "@app" %}
            <div class="my-3">
            {% render block %}</div>
            {% when "vendor" %}
              <div class="my-3">
                <p class="uppercase text-xs text-gray-500 tracking-widest text-center lg:text-left">{{ product.vendor }}</p>
              </div>
            {% when "title" %}

              <div class="py-3">
                <p class="mx-auto lg:mx-0 text-xl text-center lg:text-left tracking-wide uppercase">{{ product.title }}</p>
              </div>
            {% when "price" %}
              <div class="border-b pb-5 text-center lg:text-left">{% render "product-price" %}</div>
            {% when "variant_selector" %}
              <div class="py-4">
                {% unless product.has_only_default_variant %}
                  <variant-selector data-url="{{ product.url }}" data-section="{{ section.id }}">
                    {% for option in product.options_with_values %}
                      <label for="Option-{{ section.id }}-{{ forloop.index0 }}">{{ option.name }}</label>
                      <div class="my-2">
                        <select
                          name="options[{{ option.name | escape }}]"
                          id="Option-{{ section.id }}-{{ forloop.index0 }}"
                          class="w-full border py-3 px-3">
                          {% for value in option.values %}
                            <option
                              value="{{ value | escape }}"
                              {% if option.selected_value == value %}
                              selected="selected"
                              {% endif %}>
                              {{ value }}
                            </option>
                          {% endfor %}
                        </select>
                      </div>

                      <script type="application/json">
                        {{ product.variants | json }}
                      </script>

                    {% endfor %}
                  </variant-selector>
                {% endunless %}
              </div>
            {% when "quantity" %}
              <div class="pb-3">{% render "product-quantity-selector" %}</div>


            {% when "checkout_button" %}
              <div class="pb-6">
                <button
                  type="submit"
                  name="add"
                  class="product-btn"
                  {% if selected_variant.available == false %}
                  disabled
                  {% endif %}>
                  {% if selected_variant.available == false %}
                    Sold out
                  {% else %}
                    Add to cart
                  {% endif %}
                </button>
              </div>
            {% when "description" %}
              <p>{{ product.description }}</p>

            </div>

        {% endcase %}

      {% endfor %}

    {% endform %}

  </div>

</div>
<div class="block lg:hidden z-50">
  {% render "accordion" %}</div>
<script>
  class VariantSelector extends HTMLElement {
  constructor() {
    super();
    this.addEventListener("change", this.onVariantChange);
  }
  
  onVariantChange() {
    this.getSelectedOptions();
    this.getSelectedVariant();
  
    if (this.currentVariant) {
      this.updateURL();
      this.updateFormID();
      this.updatePrice();
    }
  }
  
  getSelectedOptions() {
    this.options = Array.from(this.querySelectorAll('select'), (select) => select.value);
  }
  
  getVariantJSON() {
    this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
    return this.variantData;
  }
  
  getSelectedVariant() {
    this.currentVariant = this.getVariantJSON().find((variant) => {
      const findings = !variant.options.map((option, index) => {
        return this.options[index] === option;
      }).includes(false);
  
      return findings;
    });
  }
  
  updateURL() {
    if (!this.currentVariant) return;
    window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`);
  }
  
  updateFormID() {
    const formInput = document.querySelector("#product-form").querySelector('input[name="id"]');
    formInput.value = this.currentVariant.id;
  }
  
  updatePrice() {
    fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`)
      .then((response) => response.text())
      .then((responseText) => {
        const id = `price-${this.dataset.section}`;
        const html = new DOMParser().parseFromString(responseText, 'text/html');
  
        const oldPrice = document.getElementById(id);
        const newPrice = html.getElementById(id);
  
        if (oldPrice && newPrice) oldPrice.innerHTML = newPrice.innerHTML;
      });
  }
  }
  
  document.getElementById('product-form').addEventListener('submit', function (event) {
    event.preventDefault(); 
  
    const formData = new FormData(event.target);
    const addButton = document.querySelector('.product-btn');
    const originalButtonText = addButton.textContent;
  
    fetch('/cart/add.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
      },
      body: new URLSearchParams(formData),
    })
      .then(response => response.json())
      .then(data => {
        console.log('Product added to cart:', data);
  
        location.reload()
       
      })
      .catch(error => {
        console.error('Error adding product to cart:', error);
      });
  });
   
  customElements.define("variant-selector", VariantSelector);
</script>
{% schema %}
  {
    "name": "Product",
    "settings": [
      {
        "type": "color",
        "id": "product_background_color",
        "label": "Product Page Background Color"
      }
    ],
    "blocks": [
      {
        "type": "vendor",
        "name": "Vendor",
        "limit": 1
      },
      {
        "type": "title",
        "name": "Title",
        "limit": 1
      },
      {
        "type": "price",
        "name": "Price",
        "limit": 1
      },
      {
        "type": "variant_selector",
        "name": "Variant Selector",
        "limit": 1
      }, {
        "type": "quantity",
        "name": "Quantity",
        "limit": 1
      }, {
        "type": "checkout_button",
        "name": "Checkout Button",
        "limit": 1
      }, {
        "type": "description",
        "name": "Description",
        "limit": 1
      }, {
        "type": "metafield",
        "name": "Metafield"
      }, {
        "type": "@app"
       
      }

    ]
  }
{% endschema %}

